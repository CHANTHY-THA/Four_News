{
	"info": {
		"_postman_id": "f303e04f-a21c-453f-a14e-ace8c7537a71",
		"name": "API_admin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26220678",
		"_collection_link": "https://interstellar-water-733383.postman.co/workspace/Four_News~08bbf8e6-d991-41c5-bcfc-2e426435af7a/collection/26220678-f303e04f-a21c-453f-a14e-ace8c7537a71?action=share&source=collection_link&creator=26220678"
	},
	"item": [
		{
			"name": "category",
			"item": [
				{
					"name": "get categories",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "get category by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/category/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"category",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get category by filter (name,description,created_by)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/categories/filter?name=Life and society&description=test&created_by=admin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories",
								"filter"
							],
							"query": [
								{
									"key": "name",
									"value": "Life and society"
								},
								{
									"key": "description",
									"value": "test"
								},
								{
									"key": "created_by",
									"value": "admin"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Life and society\",\r\n    \"description\": \"This category will show you about life and society etc...\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "update category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":1,\r\n    \"name\":\"Sports\",\r\n    \"description\": \"This category will show you about football, valeball, boxing, etc...\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/category/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"category",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "tags",
			"item": [
				{
					"name": "get tags",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "get tags by filter (name, created_by)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags/filter?name=music&created_by=admin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags",
								"filter"
							],
							"query": [
								{
									"key": "name",
									"value": "music"
								},
								{
									"key": "created_by",
									"value": "admin"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get tag by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tag/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tag",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create tag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Technology\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tag",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tag"
							]
						}
					},
					"response": []
				},
				{
					"name": "update tag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 4,\r\n    \"name\": \"Technology\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tag",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tag"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete tag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tag/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tag",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "news",
			"item": [
				{
					"name": "get news",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/news",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"news"
							]
						}
					},
					"response": []
				},
				{
					"name": "get news by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/singlenews/4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"singlenews",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "get news by filter (title, categoryname,  created_by )",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/news/filter?title=INB100 Productions Releases SM After Claiming to Be Injustice",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"news",
								"filter"
							],
							"query": [
								{
									"key": "title",
									"value": "INB100 Productions Releases SM After Claiming to Be Injustice"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create news",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"categoryId\": 3,\r\n    \"authorId\": 1,\r\n    \"userId\": 5,\r\n    \"title\": \"ក្រុមហ៊ុន​រថយន្តខ្មែរ GTV ប្រកាស​ចេញ​ភីកអាប់ខ្នាតធំថ្មីម៉ូឌែល គោព្រៃ-KOUPREY ប្រើម៉ាស៊ីន Hybrid តម្លៃជាង ៣ម៉ឺនដុល្លារ\",\r\n    \"image\": \"\",\r\n    \"short_description\": \"ក្រុមហ៊ុន GTV Motor Cambodia នៅថ្ងៃទី៥ ខែមិថុនា ឆ្នាំ​២០២៤ បាន​ប្រកាស​ចេញរថយន្តភីកអាប់ថ្មី គឺម៉ូឌែល គោព្រៃ ដែលរួមមាន KOUPREY និង KOUPREY PRO តម្លៃជាង ៣ម៉ឺនដុល្លារ។\",\r\n    \"content\": \"ទំហំរបស់​រថយន្ត KOUPREY នេះ គឺ ៥៦១៧ x ២០៩០ x ១៩១០ ដោយតួរថយន្ត ត្រូវបាន​រចនាម៉ូឌ​បែបទំនើប ជាស្ថាបត្យកម្ម​ដ៏ឆ្លាតវៃ ខណៈ​ចង្កៀងមុខក្រោយ ជាប្រភេទ LED។ វា​មាន​សមត្ថភាព​ដឹកបាន ៤,៥តោន និងកម្លាំងទាញសណ្តោងបាន ៣,៥តោន។ មិនតែប៉ុណ្ណោះ​ វាមានសមត្ថភាព​ទប់លំនឹង និងមានប្រព័ន្ធគ្រប់គ្រង​ដៃចង្កូតទន់រលូន ដោយប្រើប្រាស់​ដៃចង្កូតអេឡិចត្រូនិក។\",\r\n    \"tagId\": 4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/news",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"news"
							]
						}
					},
					"response": []
				},
				{
					"name": "update news",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 4,\r\n    \"categoryId\": 1,\r\n    \"authorId\": 1,\r\n    \"userId\": 1,\r\n    \"title\": \"INB100 Productions Releases SM After Claiming to Be Injustice\",\r\n    \"image\": \"\",\r\n    \"short_description\": \"The small group EXO-CBX of Chen, Baekhyun and Xiumin stood up against the injustice of SM Entertainment .\",\r\n    \"content\": \"In June last year, EXO-CBX took legal action and obtained an exclusive contract, and raised a fair dividend claim with SM, the production said. At that time, the two sides negotiated and resolved the issue, believing that both parties agreed that EXO's artistic activities were the most important, and by agreement at that time, all EXO-CBX works and names would be assigned through INB100 Productions. . However, SM ignored the agreement and demanded that INB100 provide 10% of sales for the artist's work activities. Despite INB100 sending evidence, SM did not respond for more than two months.​We plan to report SM's injustice. This is what INB100 says .​However, this case seems to be a new topic for the K-Pop world . Awaiting continuous update.\",\r\n    \"tagId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/news",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"news"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete news",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/news/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"news",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "newstags",
			"item": [
				{
					"name": "get newstag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/newstag",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"newstag"
							]
						}
					},
					"response": []
				},
				{
					"name": "get newstag by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/newstag/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"newstag",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "authors",
			"item": [
				{
					"name": "get authors",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/authors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "get author by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/author/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"author",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "get author by filter (username, created_by)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authors/filter?username=e",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authors",
								"filter"
							],
							"query": [
								{
									"key": "username",
									"value": "e"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create author",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7IklEIjoxLCJ1c2VybmFtZSI6IkNoYW5yeSBDaGhveSIsInJvbGUiOiJzdXBlckFkbWluIn0sImlhdCI6MTcxNzk0MjAwNiwiZXhwIjoxNzE4MDUwMDA2fQ.gLOgV4f-EJCnb32h9eEtC_pPPa9Pdu3HnY2Pd9WbTNQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"Buna\",\r\n    \"biography\":\"Author\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/author",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"author"
							]
						}
					},
					"response": []
				},
				{
					"name": "update author",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":1,\r\n    \"username\":\"Dara\",\r\n    \"biography\":\"Profesonal Author\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/author",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"author"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete author",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/author/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"author",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "get users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user by filter (by username)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/filter?username=chanthy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"filter"
							],
							"query": [
								{
									"key": "username",
									"value": "chanthy"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"ssinet\",\r\n    \"password\": \"ry@123\",\r\n    \"role\": \"superAdmin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "update username",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"npros\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/username/4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"username",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "update password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"currentPassword\":\"1234\",\r\n    \"newPassword\":\"123\",\r\n    \"confirmPassword\":\"123\"\r\n   \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/password/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"password",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\":0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "get auth user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"username\":\"tchanthy\",\r\n    \"password\":\"ry@123\"\r\n}\r\n\r\n// {\r\n//     \"username\":\"Chanry Chhoy\",\r\n//     \"password\":\"ry@123\"\r\n// }\r\n// {\r\n//     \"username\":\"admin\",\r\n//     \"password\":\"123\"\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "default super admin user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"npros\",\r\n    \"password\":\"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/createDummySuperAdmin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"createDummySuperAdmin"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}